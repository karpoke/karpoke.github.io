<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Karpoke - Just another Pelican blog - c</title><link>https://karpoke.ignaciocano.com/</link><description></description><lastBuildDate>Tue, 01 Nov 2016 15:09:00 +0100</lastBuildDate><item><title>Linux containers in 500 lines of code</title><link>https://karpoke.ignaciocano.com/2016/11/01/linux-containers-in-500-lines-of-code/</link><description>&lt;blockquote&gt;
&lt;p&gt;I’ve used Linux containers directly and indirectly for years, but I wanted
to become more familiar with them. So I wrote some code. This used to be 500
lines of code, I swear, but I’ve revised it some since publishing; I’ve
ended up with about 70 lines …&lt;/p&gt;&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nacho Cano</dc:creator><pubDate>Tue, 01 Nov 2016 15:09:00 +0100</pubDate><guid isPermaLink="false">tag:karpoke.ignaciocano.com,2016-11-01:/2016/11/01/linux-containers-in-500-lines-of-code/</guid><category>contenedores en linux</category><category>c</category><category>kernel</category><category>cgroups</category><category>strlimit</category><category>llamadas de sistema</category><category>puntos de montaje</category><category>recursos de sistema</category><category>configuración de red</category></item><item><title>Limitando el número de procesos por usuario</title><link>https://karpoke.ignaciocano.com/2011/08/01/limitando-el-numero-de-procesos-por-usuario/</link><description>&lt;p&gt;Mediante el comando &lt;code&gt;ulimit&lt;/code&gt; podemos consultar y controlar el valor de los
recursos disponibles para la consola y los &lt;a href="https://karpoke.ignaciocano.com/2010/12/16/mejora-del-rendimiento-interactivo-agrupando-tareas-por-terminal/" title="mejora del rendimiento interactivo agrupando tareas por terminal"&gt;procesos que puedan ser iniciados
desde ella&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Las diferentes opciones que acepta este comando son:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;-a     All current limits are reported
-b     The maximum socket buffer size
-c     The maximum size …&lt;/code&gt;&lt;/pre&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nacho Cano</dc:creator><pubDate>Mon, 01 Aug 2011 19:23:00 +0200</pubDate><guid isPermaLink="false">tag:karpoke.ignaciocano.com,2011-08-01:/2011/08/01/limitando-el-numero-de-procesos-por-usuario/</guid><category>bash</category><category>bomba fork</category><category>c</category><category>limits.conf</category><category>perl</category><category>python</category><category>ubuntu</category><category>ulimit</category></item><item><title>Endianness</title><link>https://karpoke.ignaciocano.com/2011/07/30/endianness/</link><description>&lt;p&gt;"&lt;a href="http://secure.wikimedia.org/wikipedia/es/wiki/Endianness" title="Endianicidad"&gt;Endianicidad&lt;/a&gt;" designa el formato en el que se almacenan los datos
de más de un byte en un ordenador. El sistema &lt;em&gt;big-endian&lt;/em&gt; adoptado por
Motorola entre otros, consiste en representar los bytes en el orden
"natural", así el valor hexadecimal 0x4A3B2C1D se codificaría en memoria
en la secuencia {4A, 3B …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nacho Cano</dc:creator><pubDate>Sat, 30 Jul 2011 17:34:00 +0200</pubDate><guid isPermaLink="false">tag:karpoke.ignaciocano.com,2011-07-30:/2011/07/30/endianness/</guid><category>big-endian</category><category>byteorder</category><category>c</category><category>casting</category><category>little-endian</category><category>middle-endian</category><category>oneliner</category><category>pack</category><category>perl</category><category>python</category><category>sys</category></item><item><title>¿Un keylogger en Ubuntu?</title><link>https://karpoke.ignaciocano.com/2011/07/22/un-keylogger-en-ubuntu/</link><description>&lt;p&gt;El comando &lt;code&gt;xinput&lt;/code&gt; permite configurar y probar dispositivos de entrada
para las XWindow. Podemos obtener un listado de los dispositivos de
entrada:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ xinput list
⎡ Virtual core pointer                      id=2    [master pointer  (3)]
⎜   ↳ Virtual core XTEST pointer                id=4    [slave  pointer  (2)]
⎜   ↳ SynPS/2 Synaptics TouchPad                id=15   [slave  pointer  (2 …&lt;/code&gt;&lt;/pre&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nacho Cano</dc:creator><pubDate>Fri, 22 Jul 2011 04:35:00 +0200</pubDate><guid isPermaLink="false">tag:karpoke.ignaciocano.com,2011-07-22:/2011/07/22/un-keylogger-en-ubuntu/</guid><category>apparmor</category><category>c</category><category>ixkeylog</category><category>keylogger</category><category>perl</category><category>selinux</category><category>ubuntu</category><category>xinput</category></item><item><title>inception</title><link>https://karpoke.ignaciocano.com/2011/03/14/inception/</link><description>&lt;p&gt;&lt;em&gt;&lt;a href="http://github.com/karthick18/inception" title="Inception"&gt;Inception&lt;/a&gt;&lt;/em&gt; en C:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/karthick18/inception.git
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img alt="inception" src="https://karpoke.ignaciocano.com/images/inception-300x203.png" /&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nacho Cano</dc:creator><pubDate>Mon, 14 Mar 2011 13:35:00 +0100</pubDate><guid isPermaLink="false">tag:karpoke.ignaciocano.com,2011-03-14:/2011/03/14/inception/</guid><category>anacreonte</category><category>byobu</category><category>c</category><category>inception</category><category>konom</category><category>screen</category><category>terminus</category><category>the name of the game</category></item><item><title>ls sin ls</title><link>https://karpoke.ignaciocano.com/2011/03/12/ls-sin-ls/</link><description>&lt;p&gt;En bash:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ for i in *; do echo $i; done
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img alt="ls" src="https://karpoke.ignaciocano.com/images/ls-300x232.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;em&gt;Fuente: &lt;a href="http://nfosolutions.com/" title="nfosolutions.com"&gt;nfosolutions.com&lt;/a&gt;&lt;/em&gt;&lt;/small&gt;&lt;/p&gt;
&lt;p&gt;En &lt;a href="http://snippets.dzone.com/posts/show/2735" title="C"&gt;C&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/*
 *
 * Esempio che scansiona una cartella stampando a video i file in essa
 * contenuti.
 */

#include
#include
#include
#include

int main(int argc, char *argv[])
{
    DIR *dir;
    struct dirent *drent;

    if(argc &amp;lt; 2)
    {
        fprintf(stderr, "%s \n", argv …&lt;/code&gt;&lt;/pre&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nacho Cano</dc:creator><pubDate>Sat, 12 Mar 2011 13:11:00 +0100</pubDate><guid isPermaLink="false">tag:karpoke.ignaciocano.com,2011-03-12:/2011/03/12/ls-sin-ls/</guid><category>c</category><category>closedir</category><category>ctypes</category><category>generador</category><category>listdir</category><category>opendir</category><category>python</category><category>yield</category></item><item><title>setuid y setgid</title><link>https://karpoke.ignaciocano.com/2011/02/28/setuid-y-setgid/</link><description>&lt;p&gt;&lt;code&gt;setuid&lt;/code&gt; y &lt;code&gt;setgid&lt;/code&gt; son unos permisos especiales, también llamados los
&lt;em&gt;sticky bits&lt;/em&gt;, que se les pueden asignar a los programas ejecutables
para que se ejecuten con los permisos del propietario y no del usuario
que los ejecuta. Esto sirve para, por ejemplo, que cualquier usuario
ejecute el comando &lt;code&gt;ping&lt;/code&gt; aunque …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nacho Cano</dc:creator><pubDate>Mon, 28 Feb 2011 14:33:00 +0100</pubDate><guid isPermaLink="false">tag:karpoke.ignaciocano.com,2011-02-28:/2011/02/28/setuid-y-setgid/</guid><category>c</category><category>chmod</category><category>find</category><category>gcc</category><category>getegid</category><category>geteuid</category><category>getgid</category><category>getuid</category><category>gid efectivo</category><category>gid real</category><category>id</category><category>sticky bit</category><category>uid efectivo</category><category>uid real</category></item></channel></rss>