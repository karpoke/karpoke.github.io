<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Karpoke - django</title><link>https://karpoke.ignaciocano.com/</link><description></description><lastBuildDate>Mon, 07 Nov 2016 01:17:00 +0100</lastBuildDate><item><title>Bullet proofing Django models</title><link>https://karpoke.ignaciocano.com/2016/11/07/bullet-proofing-django-models/</link><description>&lt;blockquote&gt;
&lt;p&gt;We recently added a bank account like functionality into one of our products.
During the development we encountered some textbook problems and I thought it
can be a good opportunity to go over some of the patterns we use in our
Django models.
This article was written in the order …&lt;/p&gt;&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nacho Cano</dc:creator><pubDate>Mon, 07 Nov 2016 01:17:00 +0100</pubDate><guid isPermaLink="false">tag:karpoke.ignaciocano.com,2016-11-07:/2016/11/07/bullet-proofing-django-models/</guid><category>django</category><category>buenas prácticas</category><category>DRY</category><category>bajo acoplamiento</category><category>concurrencia</category><category>atomicidad</category><category>validación</category><category>testeo</category></item><item><title>Exclusión de URLs cuando usamos django-debug-toolbar</title><link>https://karpoke.ignaciocano.com/2014/05/15/exclusion-de-urls-cuando-usamos-django-debug-toolbar/</link><description>&lt;p&gt;&lt;a href="http://github.com/django-debug-toolbar/django-debug-toolbar" title="django-debug-toolbar"&gt;django-debug-toolbar&lt;/a&gt; es una aplicación para Django que nos muestra
información de depuración acerca de las diferentes peticiones y
respuestas que se llevan a cabo en el servidor: variables de contexto,
cabeceras, peticiones SQL, etc.&lt;/p&gt;
&lt;p&gt;Sin embargo, hay algunas URLs para las cuales nos puede interesar que no
se analicen, como …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nacho Cano</dc:creator><pubDate>Thu, 15 May 2014 20:10:00 +0200</pubDate><guid isPermaLink="false">tag:karpoke.ignaciocano.com,2014-05-15:/2014/05/15/exclusion-de-urls-cuando-usamos-django-debug-toolbar/</guid><category>django</category><category>django-debug-toolbar</category></item><item><title>Cambiar la contraseña de administrador en Django 1.2</title><link>https://karpoke.ignaciocano.com/2011/02/16/cambiar-la-contrasena-de-administrador-en-django-1-2/</link><description>&lt;p&gt;A partir de &lt;a href="https://pythonhosted.org/django_simple_feedback/topics/auth.html#changing-passwords" title="Nuevo comando changepassword en Django 1.2"&gt;Django 1.2&lt;/a&gt; se ha añadido el comando
&lt;code&gt;manage.py changepassword&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python
$ ./manage.py changepassword ['username']&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Si no proporcionamos un nombre de usuario se intentará cambiar el nombre
de usuario que concuerde con el del usuario que ha iniciado sesión. Este
comando nos ahorra escribir lo siguiente …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nacho Cano</dc:creator><pubDate>Wed, 16 Feb 2011 14:11:00 +0100</pubDate><guid isPermaLink="false">tag:karpoke.ignaciocano.com,2011-02-16:/2011/02/16/cambiar-la-contrasena-de-administrador-en-django-1-2/</guid><category>changepassword</category><category>check_passwd</category><category>django</category><category>manage.py</category><category>set_passwd</category></item><item><title>Buscar en todos los campos de un modelo en Django</title><link>https://karpoke.ignaciocano.com/2010/11/19/buscar-en-todos-los-campos-de-un-modelo-en-django/</link><description>&lt;p&gt;Una acción típica que se va a repetir en, prácticamente, cada listado que mostremos, es la de añadir un buscador.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nacho Cano</dc:creator><pubDate>Fri, 19 Nov 2010 20:49:00 +0100</pubDate><guid isPermaLink="false">tag:karpoke.ignaciocano.com,2010-11-19:/2010/11/19/buscar-en-todos-los-campos-de-un-modelo-en-django/</guid><category>buscador</category><category>django</category><category>introspección</category></item><item><title>Control de concurrencia optimista en Django</title><link>https://karpoke.ignaciocano.com/2010/11/05/control-de-concurrencia-optimista-en-django/</link><description>&lt;p&gt;Si tenemos una aplicación multiusuario, podría darse el caso de que dos
usuarios accediesen simultáneamente al mismo registro para editarlo. Si
no controlamos este evento, sucederá que el primero que guarde, que no
tiene porqué ser el primero que comenzó a editar, perderá los cambios, y
lo que es peor …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nacho Cano</dc:creator><pubDate>Fri, 05 Nov 2010 18:11:00 +0100</pubDate><guid isPermaLink="false">tag:karpoke.ignaciocano.com,2010-11-05:/2010/11/05/control-de-concurrencia-optimista-en-django/</guid><category>condición de carrera</category><category>control de concurrencia optimista</category><category>django</category><category>métodos perezosos</category></item><item><title>Actualización recursiva de un diccionario en Python</title><link>https://karpoke.ignaciocano.com/2010/09/28/actualizacion-recursiva-de-un-diccionario-en-python/</link><description>&lt;p&gt;Cuando actualizamos un diccionario con otro en Pyhton, el método &lt;code&gt;update&lt;/code&gt; copia
las entradas del diccionario fuente en el diccionario destino, sobreescribiendo
las de éste si la entrada existe en ambos diccionarios.&lt;/p&gt;
&lt;p&gt;En particular, si un diccionario contiene una entrada que es a su vez otro
diccionario, no se realiza …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nacho Cano</dc:creator><pubDate>Tue, 28 Sep 2010 13:50:00 +0200</pubDate><guid isPermaLink="false">tag:karpoke.ignaciocano.com,2010-09-28:/2010/09/28/actualizacion-recursiva-de-un-diccionario-en-python/</guid><category>diccionario de datos</category><category>django</category><category>python</category><category>recursividad</category></item></channel></rss>