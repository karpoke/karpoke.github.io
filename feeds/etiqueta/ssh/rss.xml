<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Karpoke - ssh</title><link>https://karpoke.ignaciocano.com/</link><description></description><lastBuildDate>Sun, 06 Nov 2016 13:48:00 +0100</lastBuildDate><item><title>Streisand: Una herramienta que permite evadir la censura de Gobiernos y ISP de forma fácil</title><link>https://karpoke.ignaciocano.com/2016/11/06/streisand-una-herramienta-que-permite-evadir-la-censura-de-gobiernos-y-isp-de-forma-facil/</link><description>&lt;blockquote&gt;
&lt;p&gt;Cuando los Gobiernos y proveedores de Internet bloquean un portal, nos
tenemos que buscar la vida cambiando los DNS, conectándonos a servidores
Proxy y VPN e incluso a la red Tor. Streisand es una herramienta gratuita
que nos permite automatizar el proceso de configuración de nuevos servidores
VPN, Proxy y …&lt;/p&gt;&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nacho Cano</dc:creator><pubDate>Sun, 06 Nov 2016 13:48:00 +0100</pubDate><guid isPermaLink="false">tag:karpoke.ignaciocano.com,2016-11-06:/2016/11/06/streisand-una-herramienta-que-permite-evadir-la-censura-de-gobiernos-y-isp-de-forma-facil/</guid><category>seguridad</category><category>vpn</category><category>ssh</category><category>proxy</category><category>tor</category><category>ansible</category><category>openvpn</category><category>openssh</category><category>stunnel</category><category>libreswan</category><category>L2TP/IPsec</category><category>xl2tpd</category><category>streisand</category></item><item><title>Servicio de SSH con Latch en Ubuntu</title><link>https://karpoke.ignaciocano.com/2015/03/22/servicio-de-ssh-con-latch-en-ubuntu/</link><description>&lt;p&gt;Mediante &lt;a href="https://latch.elevenpaths.com/" title="Latch"&gt;Latch&lt;/a&gt;, podemos añadir una capa extra de seguridad a nuestro
servicio SSH, limitando la ventana de tiempo durante la cual permitimos
iniciar sesión en el servidor.&lt;/p&gt;
&lt;h2&gt;Instalación&lt;/h2&gt;
&lt;p&gt;Descargamos los paquetes que vamos a necesitar:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;bash
$ sudo aptitude install gcc make
$ sudo aptitude install libpam0g-dev libcurl4-gnutls-dev libssl-dev&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;(Si ya teníamos …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nacho Cano</dc:creator><pubDate>Sun, 22 Mar 2015 02:01:00 +0100</pubDate><guid isPermaLink="false">tag:karpoke.ignaciocano.com,2015-03-22:/2015/03/22/servicio-de-ssh-con-latch-en-ubuntu/</guid><category>2FA</category><category>latch</category><category>latch-ssh-cmd</category><category>OTP</category><category>ssh</category><category>ubuntu</category></item><item><title>Recuperar el sistema tras borrar «/var/lib»</title><link>https://karpoke.ignaciocano.com/2014/12/26/recuperar-el-sistema-tras-borrar-varlib/</link><description>&lt;p&gt;Si por casualidad acabamos ejecutando un &lt;code&gt;rm -fr /var/lib&lt;/code&gt;, tendremos un
pequeño problema. El directorio /var/lib está pensado para que los
programas instalados guarden información variable (ver &lt;code&gt;man hier&lt;/code&gt;).
Puestos a suponer, supongamos que esto es exactamente lo que acaba de
pasar, que aún no hemos reiniciado la …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nacho Cano</dc:creator><pubDate>Fri, 26 Dec 2014 21:37:00 +0100</pubDate><guid isPermaLink="false">tag:karpoke.ignaciocano.com,2014-12-26:/2014/12/26/recuperar-el-sistema-tras-borrar-varlib/</guid><category>14.04</category><category>apt-get</category><category>aptitude</category><category>copias de seguridad</category><category>dpkg</category><category>jerarquía de directorios</category><category>mysql</category><category>nc</category><category>ssh</category><category>ubuntu trusty tahr</category><category>ufw</category><category>virtualbox</category></item><item><title>sshuttle, la VPN de los pobres</title><link>https://karpoke.ignaciocano.com/2013/10/20/sshuttle-la-vpn-de-los-pobres/</link><description>&lt;p&gt;&lt;a href="https://github.com/apenwarr/sshuttle" title="shuttle"&gt;shuttle&lt;/a&gt; es una herramienta que nos permite redirigir todo el tráfico
a través de una conexión SSH, incluyendo las peticiones DNS. Está
disponible tanto en los repositorios como en GitHub.&lt;/p&gt;
&lt;p&gt;Su uso es sencillo. Para establecer la conexión:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;bash
$ sshuttle --D --pidfile=/tmp/sshuttle.pid -r user@server:1234 --dns …&lt;/code&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nacho Cano</dc:creator><pubDate>Sun, 20 Oct 2013 21:03:00 +0200</pubDate><guid isPermaLink="false">tag:karpoke.ignaciocano.com,2013-10-20:/2013/10/20/sshuttle-la-vpn-de-los-pobres/</guid><category>dns</category><category>proxy</category><category>ssh</category><category>sshuttle</category><category>tunnel</category><category>vpn</category></item><item><title>Conectarse por SSH utilizando sshpass</title><link>https://karpoke.ignaciocano.com/2013/06/09/conectarse-por-ssh-utilizando-sshpass/</link><description>&lt;p&gt;&lt;code&gt;sshpass&lt;/code&gt; es un programa que nos permite iniciar sesión en un servidor
SSH de forma no interactiva y sin utilizar claves, para lo que deberemos
proporcionar la contraseña como argumento del programa.&lt;/p&gt;
&lt;p&gt;Para conectar a un servidor SSH, es preferible &lt;a href="https://karpoke.ignaciocano.com/2011/03/03/conectarse-por-ssh-solo-usando-la-clave/" title="utilizar claves"&gt;utilizar claves&lt;/a&gt;,
además de tener en cuenta otros sistemas de …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nacho Cano</dc:creator><pubDate>Sun, 09 Jun 2013 15:47:00 +0200</pubDate><guid isPermaLink="false">tag:karpoke.ignaciocano.com,2013-06-09:/2013/06/09/conectarse-por-ssh-utilizando-sshpass/</guid><category>contraseña</category><category>ssh</category><category>sshpass</category></item><item><title>Conectar de forma segura en redes abiertas con Android, ConnectBot y ProxyDroid</title><link>https://karpoke.ignaciocano.com/2012/07/24/conectar-de-forma-segura-en-redes-abiertas-con-android-connectbot-y-proxydroid/</link><description>&lt;p&gt;Si necesitamos conectarnos desde nuestro terminal con Android a una red
WiFi que no es segura, ya sea porque es una red abierta o porque no es
de confianza, podemos utilizar ConnectBot para crear un túnel SSH para
encauzar todas las conexiones que realicemos desde el terminal a través
de …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nacho Cano</dc:creator><pubDate>Tue, 24 Jul 2012 14:02:00 +0200</pubDate><guid isPermaLink="false">tag:karpoke.ignaciocano.com,2012-07-24:/2012/07/24/conectar-de-forma-segura-en-redes-abiertas-con-android-connectbot-y-proxydroid/</guid><category>android</category><category>connectbot</category><category>proxy</category><category>proxy transparente</category><category>proxydroid</category><category>seguridad en redes inalámbricas</category><category>ssh</category><category>túnel ssh</category></item><item><title>Conectar a un servidor SSH desde Android mediante ConnectBot utilizando claves</title><link>https://karpoke.ignaciocano.com/2012/07/24/conectar-a-un-servidor-ssh-desde-android-mediante-connectbot-utilizando-claves/</link><description>&lt;p&gt;&lt;a href="http://code.google.com/p/connectbot/" title="ConnectBot"&gt;ConnectBot&lt;/a&gt; es, en mi humilde opinión, el mejor cliente SSH para
Android. Nos permite conectarnos de forma segura a nuestro servidor SSH,
ya sea directamente o mediante la creación de un túnel SSH que sirva de
&lt;em&gt;proxy&lt;/em&gt; al resto de aplicaciones.&lt;/p&gt;
&lt;p&gt;La manera más segura de conectarnos es mediante la …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nacho Cano</dc:creator><pubDate>Tue, 24 Jul 2012 13:06:00 +0200</pubDate><guid isPermaLink="false">tag:karpoke.ignaciocano.com,2012-07-24:/2012/07/24/conectar-a-un-servidor-ssh-desde-android-mediante-connectbot-utilizando-claves/</guid><category>android</category><category>clave pública</category><category>connectbot</category><category>generar claves ssh</category><category>rsa</category><category>ssh</category></item><item><title>Saltándonos el portal cautivo de una biblioteca</title><link>https://karpoke.ignaciocano.com/2012/05/15/saltandonos-el-portal-cautivo-de-una-biblioteca/</link><description>&lt;p&gt;El portal cautivo es el sistema que utilizan algunos establecimientos
como bibliotecas u hoteles en el que la conexión inalámbrica está
abierta (sin cifrar) pero para conectarse a Internet es necesario
aceptar las condiciones de uso, o introducir una contraseña, en la
página de pasarela que aparece cuando intentamos navegar …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nacho Cano</dc:creator><pubDate>Tue, 15 May 2012 14:06:00 +0200</pubDate><guid isPermaLink="false">tag:karpoke.ignaciocano.com,2012-05-15:/2012/05/15/saltandonos-el-portal-cautivo-de-una-biblioteca/</guid><category>firefox</category><category>nslookup</category><category>portal cautivo</category><category>proxy socks</category><category>socksv5</category><category>ssh</category></item><item><title>Túnel SSH inverso</title><link>https://karpoke.ignaciocano.com/2011/09/30/tunel-ssh-inverso/</link><description>&lt;p&gt;El escenario es el siguiente. Tenemos un equipo remoto C detrás de un
cortafuegos, &lt;em&gt;router&lt;/em&gt; o similar, que no podemos configurar y no permite
conexiones entrantes, de tal manera que el equipo es inaccesible desde
el exterior de la red en la que está. Otro equipo A, el nuestro, también …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nacho Cano</dc:creator><pubDate>Fri, 30 Sep 2011 18:03:00 +0200</pubDate><guid isPermaLink="false">tag:karpoke.ignaciocano.com,2011-09-30:/2011/09/30/tunel-ssh-inverso/</guid><category>2FA</category><category>contraseña de un solo uso</category><category>OTP</category><category>ssh</category><category>túnel inverso</category><category>verificación en dos pasos</category></item><item><title>Imagen a través de SSH</title><link>https://karpoke.ignaciocano.com/2011/09/28/imagen-a-traves-de-ssh/</link><description>&lt;p&gt;Si tenemos acceso por SSH a otro ordenador, ambos con entorno gráfico,
podemos redirigir la pantalla, el teclado y el ratón en ambos sentidos,
es decir, podemos conseguir cosas como:&lt;/p&gt;
&lt;p&gt;» &lt;a href="#aplicaciones-remotas-a-servidor-local" title="aplicaciones remotas que se muestren en nuestro equipo"&gt;aplicaciones remotas que se muestren en nuestro equipo&lt;/a&gt;
» &lt;a href="#aplicaciones-remotas-a-servidor-remoto" title="aplicaciones remotas que se muestren en el equipo remoto"&gt;aplicaciones remotas que se muestren en el equipo remoto&lt;/a&gt;
» &lt;a href="#aplicaciones-locales-a-servidor-remoto" title="aplicaciones locales que se muestren en el equipo remoto"&gt;aplicaciones locales que …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nacho Cano</dc:creator><pubDate>Wed, 28 Sep 2011 20:48:00 +0200</pubDate><guid isPermaLink="false">tag:karpoke.ignaciocano.com,2011-09-28:/2011/09/28/imagen-a-traves-de-ssh/</guid><category>eog</category><category>gnome-screensaver</category><category>imagemagick</category><category>import</category><category>pkill</category><category>scp</category><category>scrot</category><category>ssh</category></item></channel></rss>