<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Karpoke - kernel</title><link>https://karpoke.ignaciocano.com/</link><description></description><lastBuildDate>Tue, 01 Nov 2016 15:09:00 +0100</lastBuildDate><item><title>Linux containers in 500 lines of code</title><link>https://karpoke.ignaciocano.com/2016/11/01/linux-containers-in-500-lines-of-code/</link><description>&lt;blockquote&gt;
&lt;p&gt;I’ve used Linux containers directly and indirectly for years, but I wanted
to become more familiar with them. So I wrote some code. This used to be 500
lines of code, I swear, but I’ve revised it some since publishing; I’ve
ended up with about 70 lines …&lt;/p&gt;&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nacho Cano</dc:creator><pubDate>Tue, 01 Nov 2016 15:09:00 +0100</pubDate><guid isPermaLink="false">tag:karpoke.ignaciocano.com,2016-11-01:/2016/11/01/linux-containers-in-500-lines-of-code/</guid><category>contenedores en linux</category><category>c</category><category>kernel</category><category>cgroups</category><category>strlimit</category><category>llamadas de sistema</category><category>puntos de montaje</category><category>recursos de sistema</category><category>configuración de red</category></item><item><title>Interactive map of Linux kernel</title><link>https://karpoke.ignaciocano.com/2012/05/27/interactive-map-of-linux-kernel/</link><description>&lt;blockquote&gt;
&lt;p&gt;The interactive Linux kernel map helps you traverse complex interconnections
between subsystems of the kernel while you explore its source code. A Linux
hacker, trying to track down a bug or just understand how some subsystem
works, can get exhausted just trying to figure out what invokes what ” so the …&lt;/p&gt;&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nacho Cano</dc:creator><pubDate>Sun, 27 May 2012 13:10:00 +0200</pubDate><guid isPermaLink="false">tag:karpoke.ignaciocano.com,2012-05-27:/2012/05/27/interactive-map-of-linux-kernel/</guid><category>mapa interactivo</category><category>kernel</category><category>Linux</category><category>subsitemas</category><category>capas</category><category>funciones</category><category>interfaces</category><category>dispositivos</category><category>código fuente</category></item><item><title>Instalación de un nuevo kernel PPA en Ubuntu</title><link>https://karpoke.ignaciocano.com/2012/01/26/instalacion-de-un-nuevo-kernel-ppa-en-ubuntu/</link><description>&lt;p&gt;Esta receta muestra como &lt;a href="http://www.howopensource.com/2011/08/how-to-install-linux-kernel-3-1-rc2-oneiric-in-ubuntu-11-04-10-10-and-10-04/" title="instalar un nuevo kernel precompilado"&gt;instalar un nuevo kernel precompilado&lt;/a&gt; en
Ubuntu.&lt;/p&gt;
&lt;p&gt;Antes de continuar, cabe avisar de que si tenemos módulos del kernel que
no sean libres, por ejemplo, módulos de ATI, &lt;a href="http://www.ultimateeditionoz.com/forum/viewtopic.php?t=2504" title="Broadcom"&gt;Broadcom&lt;/a&gt; o
&lt;a href="http://unix.stackexchange.com/questions/10962/i-am-failing-to-build-virtualbox-driver-for-linux-2-6-38" title="Virtualbox"&gt;Virtualbox&lt;/a&gt;, es posible que nos surja algún problema que deberemos
resolver en cada caso. En algunos …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nacho Cano</dc:creator><pubDate>Thu, 26 Jan 2012 12:19:00 +0100</pubDate><guid isPermaLink="false">tag:karpoke.ignaciocano.com,2012-01-26:/2012/01/26/instalacion-de-un-nuevo-kernel-ppa-en-ubuntu/</guid><category>deb</category><category>kernel</category><category>module-init-tools</category><category>pae</category><category>ppa</category><category>precompilado</category><category>script</category><category>ubuntu</category></item><item><title>El consumo de la batería</title><link>https://karpoke.ignaciocano.com/2011/10/01/el-consumo-de-la-bateria/</link><description>&lt;p&gt;Con las últimas versiones del &lt;em&gt;kernel&lt;/em&gt; el &lt;a href="http://www.phoronix.com/scan.php?page=article&amp;amp;item=linux_mobile_uffda#=1" title="consumo de la batería se había disparado"&gt;consumo de la batería se
había disparado&lt;/a&gt;, reduciendo el tiempo de vida útil de la batería. Las
baterías son un bien preciado, por lo que existen multitud de trucos
para intentar &lt;a href="https://karpoke.ignaciocano.com/2010/09/26/la-bateria-del-portatil/" title="la batería del portátil"&gt;alargar su tiempo de vida&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Aunque no se conoce con certeza si …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nacho Cano</dc:creator><pubDate>Sat, 01 Oct 2011 19:55:00 +0200</pubDate><guid isPermaLink="false">tag:karpoke.ignaciocano.com,2011-10-01:/2011/10/01/el-consumo-de-la-bateria/</guid><category>ahorro energético</category><category>ASPM</category><category>grub</category><category>kernel</category><category>powertop</category><category>vida de la batería</category></item><item><title>Salvapantallas con el código fuente del kernel</title><link>https://karpoke.ignaciocano.com/2011/07/28/salvapantallas-con-el-codigo-fuente-del-kernel/</link><description>&lt;p&gt;Si queremos que cada vez que aparezca el salvapantallas, lo haga
mostrando algunas líneas del código fuente del &lt;em&gt;kernel&lt;/em&gt; por pantalla,
sólo necesitamos configurar el salvapantallas &lt;code&gt;phosphor&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Phosphor" src="https://karpoke.ignaciocano.com/images/phosphor-300x178.png" /&gt;&lt;/p&gt;
&lt;p&gt;Lo primero es instalar el código fuente del &lt;code&gt;kernel&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;bash
$ sudo apt-get source linux-source-$(uname -r)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;El comando &lt;code&gt;uname&lt;/code&gt; muestra información acerca del …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nacho Cano</dc:creator><pubDate>Thu, 28 Jul 2011 12:42:00 +0200</pubDate><guid isPermaLink="false">tag:karpoke.ignaciocano.com,2011-07-28:/2011/07/28/salvapantallas-con-el-codigo-fuente-del-kernel/</guid><category>aleatoriedad</category><category>código fuente</category><category>kernel</category><category>linux</category><category>phosphor</category><category>protector de pantalla</category><category>salvapantallas</category><category>script</category><category>sed</category><category>uname</category></item><item><title>Mejora del rendimiento interactivo agrupando tareas por terminal</title><link>https://karpoke.ignaciocano.com/2010/12/16/mejora-del-rendimiento-interactivo-agrupando-tareas-por-terminal/</link><description>&lt;p&gt;El &lt;a href="http://lkml.org/lkml/2010/10/19/123" title="parche de 200 líneas"&gt;parche de 200 líneas&lt;/a&gt; para el kernel, o su versión en &lt;a href="http://usemoslinux.blogspot.com/2010/11/foto-resumen-tras-haber-realizado-el.html" title="espacio de usuario"&gt;espacio de
usuario&lt;/a&gt;, &lt;a href="http://ubuntulife.wordpress.com/2010/11/20/el-parche-milagro-de-linux-de-200-lineas-implementado-en-4-lineas-de-bash/#comment-43848" title="mejora el rendimiento interactivo"&gt;mejora el rendimiento interactivo&lt;/a&gt; agrupando los procesos
por &lt;code&gt;tty&lt;/code&gt;. La mejora sólo será notable si tenemos varios procesos
asociados a un terminal que tengan un consumo importante de CPU, ya que
la potencia de ésta …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nacho Cano</dc:creator><pubDate>Thu, 16 Dec 2010 02:03:00 +0100</pubDate><guid isPermaLink="false">tag:karpoke.ignaciocano.com,2010-12-16:/2010/12/16/mejora-del-rendimiento-interactivo-agrupando-tareas-por-terminal/</guid><category>kernel</category><category>parche</category><category>rendimiento</category></item></channel></rss>