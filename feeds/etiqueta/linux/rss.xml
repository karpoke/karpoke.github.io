<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Karpoke - Linux</title><link>https://karpoke.ignaciocano.com/</link><description></description><lastBuildDate>Sun, 16 Dec 2012 13:41:00 +0100</lastBuildDate><item><title>Merge branch ’x86-nuke386-for-linus’</title><link>https://karpoke.ignaciocano.com/2012/12/16/merge-branch-x86-nuke386-for-linus/</link><description>&lt;blockquote&gt;
&lt;p&gt;Pull ”Nuke 386-DX/SX support” from Ingo Molnar: ”This tree removes
ancient-386-CPUs support and thus zaps quite a bit of complexity:&lt;/p&gt;
&lt;p&gt;24 files changed, 56 insertions(+), 425 deletions(-)&lt;/p&gt;
&lt;p&gt;... which complexity has plagued us with extra work whenever we wanted to
change SMP primitives, for years.&lt;/p&gt;
&lt;p&gt;Unfortunately there’s a nostalgic …&lt;/p&gt;&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nacho Cano</dc:creator><pubDate>Sun, 16 Dec 2012 13:41:00 +0100</pubDate><guid isPermaLink="false">tag:karpoke.ignaciocano.com,2012-12-16:/2012/12/16/merge-branch-x86-nuke386-for-linus/</guid><category>Linux</category><category>386</category></item><item><title>Interactive map of Linux kernel</title><link>https://karpoke.ignaciocano.com/2012/05/27/interactive-map-of-linux-kernel/</link><description>&lt;blockquote&gt;
&lt;p&gt;The interactive Linux kernel map helps you traverse complex interconnections
between subsystems of the kernel while you explore its source code. A Linux
hacker, trying to track down a bug or just understand how some subsystem
works, can get exhausted just trying to figure out what invokes what ” so the …&lt;/p&gt;&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nacho Cano</dc:creator><pubDate>Sun, 27 May 2012 13:10:00 +0200</pubDate><guid isPermaLink="false">tag:karpoke.ignaciocano.com,2012-05-27:/2012/05/27/interactive-map-of-linux-kernel/</guid><category>mapa interactivo</category><category>kernel</category><category>Linux</category><category>subsitemas</category><category>capas</category><category>funciones</category><category>interfaces</category><category>dispositivos</category><category>código fuente</category></item><item><title>Salvapantallas con el código fuente del kernel</title><link>https://karpoke.ignaciocano.com/2011/07/28/salvapantallas-con-el-codigo-fuente-del-kernel/</link><description>&lt;p&gt;Si queremos que cada vez que aparezca el salvapantallas, lo haga
mostrando algunas líneas del código fuente del &lt;em&gt;kernel&lt;/em&gt; por pantalla,
sólo necesitamos configurar el salvapantallas &lt;code&gt;phosphor&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Phosphor" src="https://karpoke.ignaciocano.com/images/phosphor-300x178.png" /&gt;&lt;/p&gt;
&lt;p&gt;Lo primero es instalar el código fuente del &lt;code&gt;kernel&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;bash
$ sudo apt-get source linux-source-$(uname -r)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;El comando &lt;code&gt;uname&lt;/code&gt; muestra información acerca del …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nacho Cano</dc:creator><pubDate>Thu, 28 Jul 2011 12:42:00 +0200</pubDate><guid isPermaLink="false">tag:karpoke.ignaciocano.com,2011-07-28:/2011/07/28/salvapantallas-con-el-codigo-fuente-del-kernel/</guid><category>aleatoriedad</category><category>código fuente</category><category>kernel</category><category>linux</category><category>phosphor</category><category>protector de pantalla</category><category>salvapantallas</category><category>script</category><category>sed</category><category>uname</category></item></channel></rss>