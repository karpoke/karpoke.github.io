<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Karpoke - nc</title><link>https://karpoke.ignaciocano.com/</link><description></description><lastBuildDate>Fri, 26 Dec 2014 21:37:00 +0100</lastBuildDate><item><title>Recuperar el sistema tras borrar «/var/lib»</title><link>https://karpoke.ignaciocano.com/2014/12/26/recuperar-el-sistema-tras-borrar-varlib/</link><description>&lt;p&gt;Si por casualidad acabamos ejecutando un &lt;code&gt;rm -fr /var/lib&lt;/code&gt;, tendremos un
pequeño problema. El directorio /var/lib está pensado para que los
programas instalados guarden información variable (ver &lt;code&gt;man hier&lt;/code&gt;).
Puestos a suponer, supongamos que esto es exactamente lo que acaba de
pasar, que aún no hemos reiniciado la …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nacho Cano</dc:creator><pubDate>Fri, 26 Dec 2014 21:37:00 +0100</pubDate><guid isPermaLink="false">tag:karpoke.ignaciocano.com,2014-12-26:/2014/12/26/recuperar-el-sistema-tras-borrar-varlib/</guid><category>14.04</category><category>apt-get</category><category>aptitude</category><category>copias de seguridad</category><category>dpkg</category><category>jerarquía de directorios</category><category>mysql</category><category>nc</category><category>ssh</category><category>ubuntu trusty tahr</category><category>ufw</category><category>virtualbox</category></item><item><title>Analizando el tráfico de red en Android con tcpdump, netcat y Wireshark</title><link>https://karpoke.ignaciocano.com/2012/08/20/analizando-el-trafico-de-red-en-android-con-tcpdump-netcat-y-wireshark/</link><description>&lt;p&gt;Si necesitamos analizar el tráfico de red de nuestro Android, ya sea
para depurar una aplicación o para ver qué uso de la red hacen las
aplicaciones instaladas en el terminal, podemos recurrir a herramientas
bien conocidas como &lt;code&gt;tcpdump&lt;/code&gt;, &lt;code&gt;netcat&lt;/code&gt; y Wireshark.&lt;/p&gt;
&lt;h2&gt;Antes de empezar&lt;/h2&gt;
&lt;p&gt;Antes de continuar, deberemos tener …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nacho Cano</dc:creator><pubDate>Mon, 20 Aug 2012 01:55:00 +0200</pubDate><guid isPermaLink="false">tag:karpoke.ignaciocano.com,2012-08-20:/2012/08/20/analizando-el-trafico-de-red-en-android-con-tcpdump-netcat-y-wireshark/</guid><category>adb</category><category>adb wifi</category><category>android</category><category>arm</category><category>http</category><category>nc</category><category>netcat</category><category>tcpdump</category><category>tcpdump-arm</category><category>tráfico de red</category><category>wireshark</category></item><item><title>Asignar la IP que queramos a un dominio de DynDNS</title><link>https://karpoke.ignaciocano.com/2010/12/30/asignar-la-ip-que-queramos-a-un-dominio-de-dyndns/</link><description>&lt;p&gt;Con el comando &lt;code&gt;inadyn&lt;/code&gt; podemos actualizar la IP de nuestro dominio, o
&lt;a href="https://karpoke.ignaciocano.com/2010/12/11/dyndns-e-inadyn/" title="dyndns e inadyn"&gt;dominios&lt;/a&gt;, en DynDNS, pero la IP no se pasa como argumento sino que
se hace una consulta a un servidor que devuelve la IP pública que
tenemos en ese momento. Por defecto, el servidor es
&lt;code&gt;checkip.dyndns.org …&lt;/code&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nacho Cano</dc:creator><pubDate>Thu, 30 Dec 2010 19:12:00 +0100</pubDate><guid isPermaLink="false">tag:karpoke.ignaciocano.com,2010-12-30:/2010/12/30/asignar-la-ip-que-queramos-a-un-dominio-de-dyndns/</guid><category>dyndns</category><category>inadyn</category><category>ip dinámica</category><category>nc</category><category>netcat</category><category>python</category><category>servidor http</category></item></channel></rss>